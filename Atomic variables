import java.util.concurrent.atomic.AtomicInteger;

public class AtomicIntegerExample {

    private static AtomicInteger counter = new AtomicInteger(0);

    public static void main(String[] args){
        //AtomicIntegerExample atomicInteger = new AtomicIntegerExample();

        //new Thread(atomicInteger::increment, "thread1").start();
        //new Thread(atomicInteger::increment, "thread2").start();

        Thread t1 = new Thread(new Runnable() {
            @Override
            public void run() {
                increment();
            }
        });

        Thread t2 = new Thread(new Runnable() {
            @Override
            public void run() {
                increment();
            }
        });

        t1.start();
        t2.start();

        try {
            t1.join();
            t2.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Counter: "+ counter);
    }

    public static void increment(){
        
        // Las variables atomicas tienen sus propios metodos
        // para realizar operaciones matematicas y otras mas
        for(int i=0; i<10000; i++) {
            counter.getAndIncrement();
        }
    }
}
